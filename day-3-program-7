Given the head of a linked list, remove the nth node from the end of the list and return its head.







  class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def remove_nth_from_end(head, n):
 
    dummy = ListNode(0)
    dummy.next = head


    fast = slow = dummy

  
    for _ in range(n + 1):
        fast = fast.next
    while fast:
        fast = fast.next
        slow = slow.next
  slow.next = slow.next.next

    return dummy.next


def print_linked_list(head):
    while head:
        print(head.val, end=" -> ")
        head = head.next
    print("None")

# Test case
head = ListNode(1)
head.next = ListNode(2)
head.next.next = ListNode(3)
head.next.next.next = ListNode(4)
head.next.next.next.next = ListNode(5)

n = 2
new_head = remove_nth_from_end(head, n)
print_linked_list(new_head)  # Output: 1 -> 2 -> 3 -> 5 -> None
